@model ICollection<Pal.Data.DTOs.Lookups.SysRoomsCountDTO>
@{
    ViewData["Title"] = T("Lookups");
    var gridModel = new GridViewModel
    {
        GridId = "SysRoomsCount",
        OnCommandClick = "commandClick",
        Model = Model,
        Columns = new List<GridViewModel.GridViewColumn>
{
            new GridViewModel.GridViewColumn{ Field = "Id",HeaderText = "Id"},
            new GridViewModel.GridViewColumn{ Field = "RoomsCount",HeaderText = T("cp.views.lookUps.title.roomsCount").ToString()},
        }
    };

    var languages = LanguageService.GetAllLanguages();
}
<link href="~/js/suncfusion/datagrid/bootstrap4.min.css" rel="stylesheet" />
<link href="~/js/suncfusion/datagrid/customGridStyle.css" rel="stylesheet" />
<link href="~/js/suncfusion/datetimepicker/bootstrap4.min.css" rel="stylesheet" />

<br />
<partial name="_Buttons" />
<hr />
<h2>@T("cp.views.lookUps.title.roomsCount")</h2>
<button class="btn btn-outline-primary" onclick="onAddNew()">@T("btn.add")</button>

<form asp-action="Add" method="post">
    @Html.AntiForgeryToken()
</form>
<br />

@{
    await Html.RenderPartialAsync("_GridView", gridModel);
}


<!-- Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalTitle">@T("cp.views.lookUps.addNewValue.title")</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-12">
                    <div class="form-group">
                        <label>@T("model.Lookups.name")</label>
                        <input id="lookCount" type="text" class="form-control lookCountInput">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@T("global.close")</button>
                <button type="button" id="saveChanges" class="btn btn-primary">@T("btn.save")</button>
            </div>
        </div>
    </div>
</div>



@section Scripts{

    <script>

         function commandClick(args) {
            switch (args.commandColumn.type) {
                case "EditBtn":
                    $('#lookCount').val(args.rowData.RoomsCount)
                    $('#saveChanges')[0].setAttribute('onclick', 'onUpdate(' + args.rowData.Id + ')')
                    $('#editModal').modal('show')

                    //window.location.assign('/Admin/Lookups/HeatingTypesEdit/' + args.rowData.Id);
                    break;
                case "DeleteBtn":
                    Swal.fire({
                        title: '@T("cp.alert.onDeleteMessage.subtitle")',
                        text: "@T("cp.alert.onDeleteMessage.title")",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                           confirmButtonText: '@T("cp.alert.onDelete.btnDelete")',
                        cancelButtonText: '@T("cp.alert.onDelete.btnCancel")',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            onDelete(args.rowData.Id);
                        }
                    });
                    break;
            }
         }

        //--------------------------------------------
        function onDelete(id) {
            var token = $("input[name='__RequestVerificationToken']").val();
            $.ajax({
                url: '/Admin/Lookups/RoomsCountDelete/' + id,
                type: 'POST',
                headers: { RequestVerificationToken: token },
                success: function (res) {
                    if (res.responseType === 1) {
                        var grid = document.getElementById("@gridModel.GridId").ej2_instances[0];
                        grid.deleteRecord("Id", grid.getSelectedRecords()[0]);
                        Swal.fire(
                             '@T("cp.alert.onDeleteSuccess.title")',
                            '@T("cp.alert.onDeleteSuccess.subtitle")',
                            'success',
                        );

                    } else {
                        Swal.fire(
                            '@T("cp.alert.onDeleteFailde.title")',
                            '@T("cp.alert.onDeleteFailde")',
                            'error',
                        );
                    }

                },
                error: function (e) {
                    Swal.fire(
                        '@T("cp.alert.onDeleteFailde.title")',
                        '@T("cp.alert.onDeleteFailde.subtitle")',
                        'error',
                    );
                    console.error(e);
                }
            });
        }


        //-----------------------------------
        function onAddNew() {
            $('#lookCount').val("")
            $('#saveChanges')[0].setAttribute('onclick' , 'onSave()')
            $('#editModal').modal('show');
        }


        //--------------------------------------------
        function onSave() {
            var allGood = true;

            $(".lookCountInput").each(function (i, elemnt) {
                if (!elemnt.value || elemnt.value.trim() === "") {
                    ErrorToast('@T("cp.alert.onSave.IncompleteInfo.title")', '@T("cp.alert.onSave.IncompleteInfo.subtitle")');
                    allGood = false;
                    return;
                }
            });
            if (!allGood) return;
            var header = { RequestVerificationToken: $("input[name='__RequestVerificationToken']").val() };

            var formdata = new FormData();
            formdata.append("RoomsCount" , $('#lookCount').val())

            $.ajax({
                headers: header,
                url: '/Admin/Lookups/RoomsCountAdd',
                type: 'post',
                data: formdata,
                contentType: false,
                processData:false,
                success: function (res) {
                    if (res.responseType === 1) {
                        SuccessToast('@T("cp.alert.onSaveSuccess")');
                        var grid = document.getElementById("@gridModel.GridId").ej2_instances[0];
                        grid.dataSource.push({
                            Id: res.result.id,
                            RoomsCount: res.result.roomsCount,
                        });
                        grid.refresh();
                        $(".lookCountInput").val('');
                    } else {
                        ErrorToast('@T("cp.alert.error")',' @T("cp.alert.onSaveFailde")');
                    }

                },
                error: function (e) {
                    console.error(e);
                }

            })
        }

        //--------------------------------------------
        function onUpdate(id) {
            var allGood = true;

            $(".lookCountInput").each(function (i, elemnt) {
                if (!elemnt.value || elemnt.value.trim() === "") {
                    ErrorToast('@T("cp.alert.onSave.IncompleteInfo.title")', '@T("cp.alert.onSave.IncompleteInfo.subtitle")');
                    allGood = false;
                    return;
                }

            });
            if (!allGood) return;
            var header = { RequestVerificationToken: $("input[name='__RequestVerificationToken']").val() };

            var formdata = new FormData();
            formdata.append('Id', id);
            formdata.append('RoomsCount', $('#lookCount').val());

            $.ajax({
                headers: header,
                url: '/Admin/Lookups/RoomsCountUpdate',
                type: 'post',
                data: formdata,
                contentType: false,
                processData:false,
                success: function (res) {
                    if (res.responseType === 1) {
                        SuccessToast('@T("cp.alert.onUpdateSuccess")');
                        var grid = document.getElementById("@gridModel.GridId").ej2_instances[0];
                        grid.dataSource.forEach(function (obj, index, arr) {
                            if (obj.Id == id) {
                                arr[index].Id = res.result.id,
                                arr[index].RoomsCount = res.result.roomsCount,
                                grid.refresh();
                            }

                        });

                        $(".lookCountInput").val('');
                        $('#editModal').modal('hide');

                    } else {
                        ErrorToast('@T("cp.alert.error")', '@T("cp.alert.onSaveFailde")');
                    }

                },
                error: function (e) {
                    console.error(e);
                }

            })
        }
    </script>
    <script src="~/js/suncfusion/datagrid/datagrid.min.js"></script>
    <ejs-scripts></ejs-scripts>



}