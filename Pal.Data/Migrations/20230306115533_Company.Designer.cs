// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pal.Data.Contexts;

#nullable disable

namespace Pal.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230306115533_Company")]
    partial class Company
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pal.Core.Domains.Account.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FCMToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogInDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RegisterdByAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("WhatsappNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pal.Core.Domains.Account.AspNetPhoneVerificationToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VerificationTokenType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AspNetPhoneVerificationTokens");
                });

            modelBuilder.Entity("Pal.Core.Domains.Activity_logs.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("NewData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelatedTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransReferenceId")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPhone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("UserTypeReferenceId")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("Pal.Core.Domains.Attachments.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alt")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReferenceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Pal.Core.Domains.Chat.ChatInbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatType")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("LastMsgContent")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("LastMsgDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceId1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceId2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceName1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ChatInbox");
                });

            modelBuilder.Entity("Pal.Core.Domains.Chat.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InboxId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MsgDateLocal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MsgDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MsgType")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverType")
                        .HasColumnType("int");

                    b.Property<int>("SenderType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InboxId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Pal.Core.Domains.Communications.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CallDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CallPurposeId")
                        .HasColumnType("int");

                    b.Property<int?>("CallResultId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CallStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CallStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CallToType")
                        .HasColumnType("int");

                    b.Property<int>("CallTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DealId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScheduled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CallPurposeId");

                    b.HasIndex("CallResultId");

                    b.HasIndex("CallStatusId");

                    b.HasIndex("CallTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("Pal.Core.Domains.Communications.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("Pal.Core.Domains.Companies.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproveState")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("AvrageRating")
                        .HasColumnType("real");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComapnyLogo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CompanyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTearmAndConditionsAccepted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MainImgUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ManagedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManagerEmail")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ManagerSignatureImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TaxDocumentImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TwitterURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhatsApp")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("linkedinURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyCategoryId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Pal.Core.Domains.Companies.CompanyTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CompanyTranslate");
                });

            modelBuilder.Entity("Pal.Core.Domains.Config.WebsiteConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GoogleMapsAPIKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsUseIFrameTemplateInControlPanel")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("WebsiteConfigurations");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerStatus")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FollowedByEmpId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("FullAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegisterdByAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeadRatingId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TwitterId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsappNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LeadRatingId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LeadStatusId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.CustomerFavorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FavoriteReference")
                        .HasColumnType("int");

                    b.Property<int>("FavoriteType")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerFavorites");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.CustomerNotes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("AddedByEmpId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedByEmpId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerNotes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.CustomerSavedSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressNamesAsString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BathRoomsCountIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeaturesIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForRent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForSale")
                        .HasColumnType("bit");

                    b.Property<float?>("MaxArea")
                        .HasColumnType("real");

                    b.Property<float?>("MaxPrice")
                        .HasColumnType("real");

                    b.Property<float?>("MinArea")
                        .HasColumnType("real");

                    b.Property<float?>("MinPrice")
                        .HasColumnType("real");

                    b.Property<int?>("RealestateTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RegionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomsCountIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("neighborhoodIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerSavedSearches");
                });

            modelBuilder.Entity("Pal.Core.Domains.Deals.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DealName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeadSourceId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<float>("SuccessProbability")
                        .HasColumnType("real");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("StageId");

                    b.HasIndex("TypeId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("Pal.Core.Domains.Empolyees.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Pal.Core.Domains.GenericColumns.ColumnDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColId")
                        .HasColumnType("int");

                    b.Property<int>("TableReferenceId")
                        .HasColumnType("int");

                    b.Property<string>("Val")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColId");

                    b.ToTable("ColumnDetails");
                });

            modelBuilder.Entity("Pal.Core.Domains.GenericColumns.EditableTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("tableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EditableTables");
                });

            modelBuilder.Entity("Pal.Core.Domains.Languages.Language", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Culture")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRtl")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Shortcut")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Pal.Core.Domains.Languages.LanguageStringResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ResourceValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("StringResourceGroup")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("LanguageStringResources");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallPurpose", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysCallPurposes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallPurposeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CallPurposeId")
                        .HasColumnType("int");

                    b.Property<string>("CallPurposeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CallPurposeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCallPurposeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallResult", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysCallResults");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallResultTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CallResultId")
                        .HasColumnType("int");

                    b.Property<string>("CallResultName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CallResultId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCallResultTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysCallStatus");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallStatusTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CallStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CallStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CallStatusId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCallStatusTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysCallTypes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CallTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CallTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CallTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCallTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealStage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysDealStages");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealStageTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StageId");

                    b.ToTable("SysDealStageTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysDealTypes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DealTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DealTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysDealTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysJobTitle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysJobTitles");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysJobTitleTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysJobTitleTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadRating", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysLeadRatings");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadRatingTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("LeadRatingId")
                        .HasColumnType("int");

                    b.Property<string>("RateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LeadRatingId");

                    b.ToTable("SysLeadRatingTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadSource", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysLeadSources");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadSourceTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("LeadSourceId")
                        .HasColumnType("int");

                    b.Property<string>("SourceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LeadSourceId");

                    b.ToTable("SysLeadSourceTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysLeadStatus");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadStatusTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("LeadStatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LeadStatusId");

                    b.ToTable("SysLeadStatusTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysTaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysTaskStatus");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysTaskStatusTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TaskStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("SysTaskStatusTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("SysCities");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCityTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCityTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCompanyCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysCompanyCategories");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCompanyCategoryTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyCategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCompanyCategoryTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCountry", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysCountries");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCountryTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SysCountryTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNationality", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysNationalities");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNationalityTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("NationalityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NationalityId");

                    b.ToTable("SysNationalityTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNeighborhood", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("SysNeighborhoods");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNeighborhoodTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<string>("NeighborhoodName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NeighborhoodId");

                    b.ToTable("SysNeighborhoodTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysPaymentType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysPaymentTypes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysPaymentTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("SysPaymentTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysRegion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnlyLookup")
                        .HasColumnType("bit");

                    b.Property<string>("Lat")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lng")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Population")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("SysRegions");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysRegionTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("RegionId");

                    b.ToTable("SysRegionTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysViewType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SysViewTypes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysViewTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ViewTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ViewTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ViewTypeId");

                    b.ToTable("SysViewTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationFor")
                        .HasColumnType("int");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeenUserIdsList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.NotificationParam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("NotificationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Param")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationParams");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.NotificationTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("NotificationTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Sms.SmsMsg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SmsMsgs");
                });

            modelBuilder.Entity("Pal.Core.Domains.Sms.SmsTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SmsTemplates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Sms.SmsTemplateTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TemplateId");

                    b.ToTable("SmsTemplateTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.SystemErrors.SystemError", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SystemErrors");
                });

            modelBuilder.Entity("Pal.Core.Domains.Tasks.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pal.Core.Domains.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pal.Core.Domains.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pal.Core.Domains.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pal.Core.Domains.Chat.ChatMessage", b =>
                {
                    b.HasOne("Pal.Core.Domains.Chat.ChatInbox", "ChatInbox")
                        .WithMany("ChatMessages")
                        .HasForeignKey("InboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatInbox");
                });

            modelBuilder.Entity("Pal.Core.Domains.Communications.Call", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallPurpose", "CallPurpose")
                        .WithMany()
                        .HasForeignKey("CallPurposeId");

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallResult", "CallResult")
                        .WithMany()
                        .HasForeignKey("CallResultId");

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallStatus", "CallStatus")
                        .WithMany()
                        .HasForeignKey("CallStatusId");

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallType", "CallType")
                        .WithMany()
                        .HasForeignKey("CallTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Empolyees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallPurpose");

                    b.Navigation("CallResult");

                    b.Navigation("CallStatus");

                    b.Navigation("CallType");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pal.Core.Domains.Communications.Meeting", b =>
                {
                    b.HasOne("Pal.Core.Domains.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Empolyees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pal.Core.Domains.Companies.Company", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCity", "SysCity")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Pal.Core.Domains.Lookups.SysCompanyCategory", "SysCompanyCategory")
                        .WithMany()
                        .HasForeignKey("CompanyCategoryId");

                    b.Navigation("SysCity");

                    b.Navigation("SysCompanyCategory");
                });

            modelBuilder.Entity("Pal.Core.Domains.Companies.CompanyTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Companies.Company", "Company")
                        .WithMany("CompanyTranslates")
                        .HasForeignKey("CompId");

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.Customer", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCountry", "SysCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadRating", "LeadRating")
                        .WithMany()
                        .HasForeignKey("LeadRatingId");

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadSource", "LeadSource")
                        .WithMany()
                        .HasForeignKey("LeadSourceId");

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadStatus", "LeadStatus")
                        .WithMany()
                        .HasForeignKey("LeadStatusId");

                    b.HasOne("Pal.Core.Domains.Lookups.SysNationality", "SysNationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeadRating");

                    b.Navigation("LeadSource");

                    b.Navigation("LeadStatus");

                    b.Navigation("SysCountry");

                    b.Navigation("SysNationality");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.CustomerFavorite", b =>
                {
                    b.HasOne("Pal.Core.Domains.Customers.Customer", "Customer")
                        .WithMany("CustomerFavorites")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.CustomerNotes", b =>
                {
                    b.HasOne("Pal.Core.Domains.Empolyees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("AddedByEmpId");

                    b.HasOne("Pal.Core.Domains.Customers.Customer", "Customer")
                        .WithMany("CustomerNotes")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Pal.Core.Domains.Deals.Deal", b =>
                {
                    b.HasOne("Pal.Core.Domains.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Pal.Core.Domains.Empolyees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadSource", "LeadSource")
                        .WithMany()
                        .HasForeignKey("LeadSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysDealStage", "DealStage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysDealType", "DealType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DealStage");

                    b.Navigation("DealType");

                    b.Navigation("Employee");

                    b.Navigation("LeadSource");
                });

            modelBuilder.Entity("Pal.Core.Domains.Empolyees.Employee", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysJobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Pal.Core.Domains.GenericColumns.ColumnDetail", b =>
                {
                    b.HasOne("Pal.Core.Domains.GenericColumns.EditableTable", "column")
                        .WithMany()
                        .HasForeignKey("ColId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("column");
                });

            modelBuilder.Entity("Pal.Core.Domains.Languages.LanguageStringResource", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallPurposeTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallPurpose", "CallPurpose")
                        .WithMany("Translates")
                        .HasForeignKey("CallPurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallPurpose");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallResultTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallResult", "CallResult")
                        .WithMany("Translates")
                        .HasForeignKey("CallResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallResult");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallStatusTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallStatus", "CallStatus")
                        .WithMany("Translates")
                        .HasForeignKey("CallStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallStatus");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallTypeTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysCallType", "CallType")
                        .WithMany("Translates")
                        .HasForeignKey("CallTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallType");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealStageTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysDealStage", "DealStage")
                        .WithMany("Translates")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DealStage");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealTypeTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysDealType", "DealType")
                        .WithMany("Translates")
                        .HasForeignKey("DealTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DealType");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysJobTitleTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysJobTitle", "JobTitle")
                        .WithMany("Translates")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobTitle");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadRatingTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadRating", "LeadRating")
                        .WithMany("Translates")
                        .HasForeignKey("LeadRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LeadRating");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadSourceTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadSource", "LeadSource")
                        .WithMany("Translates")
                        .HasForeignKey("LeadSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LeadSource");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadStatusTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysLeadStatus", "LeadStatus")
                        .WithMany("Translates")
                        .HasForeignKey("LeadStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LeadStatus");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysTaskStatusTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysTaskStatus", "TaskStatus")
                        .WithMany("Translates")
                        .HasForeignKey("TaskStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("TaskStatus");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCity", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCountry", "SysCountry")
                        .WithMany("SysCities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysCountry");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCityTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCity", "City")
                        .WithMany("SysCityTranslates")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCompanyCategoryTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCompanyCategory", "SysCompanyCategory")
                        .WithMany("SysCompanyCategoryTranslates")
                        .HasForeignKey("CompanyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysCompanyCategory");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCountryTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCountry", "SysCountry")
                        .WithMany("SysCountryTranslates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysCountry");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNationalityTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.SysNationality", "SysNationality")
                        .WithMany("SysNationalityTranslates")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysNationality");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNeighborhood", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysRegion", "SysRegion")
                        .WithMany("SysNeighborhoods")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysRegion");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNeighborhoodTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.SysNeighborhood", "SysNeighborhood")
                        .WithMany("SysNeighborhoodTranslates")
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysNeighborhood");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysPaymentTypeTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.SysPaymentType", "SysPaymentType")
                        .WithMany("SysPaymentTypeTranslates")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysPaymentType");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysRegion", b =>
                {
                    b.HasOne("Pal.Core.Domains.Lookups.SysCity", "SysCity")
                        .WithMany("SysRegions")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysCity");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysRegionTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.SysRegion", "SysRegion")
                        .WithMany("SysRegionTranslates")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysRegion");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysViewTypeTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.SysViewType", "SysViewType")
                        .WithMany("SysViewTypeTranslates")
                        .HasForeignKey("ViewTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SysViewType");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.Notification", b =>
                {
                    b.HasOne("Pal.Core.Domains.Notifications.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.NotificationParam", b =>
                {
                    b.HasOne("Pal.Core.Domains.Notifications.Notification", "Notification")
                        .WithMany("NotificationParams")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.NotificationTypeTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Notifications.NotificationType", "NotificationType")
                        .WithMany("NotificationTypeTranslates")
                        .HasForeignKey("NotificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("NotificationType");
                });

            modelBuilder.Entity("Pal.Core.Domains.Sms.SmsTemplateTranslate", b =>
                {
                    b.HasOne("Pal.Core.Domains.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Sms.SmsTemplate", "SmsTemplate")
                        .WithMany("Translates")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SmsTemplate");
                });

            modelBuilder.Entity("Pal.Core.Domains.Tasks.Task", b =>
                {
                    b.HasOne("Pal.Core.Domains.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Pal.Core.Domains.Empolyees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pal.Core.Domains.Lookups.CRM.SysTaskStatus", "TaskStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("TaskStatus");
                });

            modelBuilder.Entity("Pal.Core.Domains.Chat.ChatInbox", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("Pal.Core.Domains.Companies.Company", b =>
                {
                    b.Navigation("CompanyTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Customers.Customer", b =>
                {
                    b.Navigation("CustomerFavorites");

                    b.Navigation("CustomerNotes");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallPurpose", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallResult", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallStatus", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysCallType", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealStage", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysDealType", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysJobTitle", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadRating", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadSource", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysLeadStatus", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.CRM.SysTaskStatus", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCity", b =>
                {
                    b.Navigation("SysCityTranslates");

                    b.Navigation("SysRegions");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCompanyCategory", b =>
                {
                    b.Navigation("SysCompanyCategoryTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysCountry", b =>
                {
                    b.Navigation("SysCities");

                    b.Navigation("SysCountryTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNationality", b =>
                {
                    b.Navigation("SysNationalityTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysNeighborhood", b =>
                {
                    b.Navigation("SysNeighborhoodTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysPaymentType", b =>
                {
                    b.Navigation("SysPaymentTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysRegion", b =>
                {
                    b.Navigation("SysNeighborhoods");

                    b.Navigation("SysRegionTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Lookups.SysViewType", b =>
                {
                    b.Navigation("SysViewTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.Notification", b =>
                {
                    b.Navigation("NotificationParams");
                });

            modelBuilder.Entity("Pal.Core.Domains.Notifications.NotificationType", b =>
                {
                    b.Navigation("NotificationTypeTranslates");
                });

            modelBuilder.Entity("Pal.Core.Domains.Sms.SmsTemplate", b =>
                {
                    b.Navigation("Translates");
                });
#pragma warning restore 612, 618
        }
    }
}
